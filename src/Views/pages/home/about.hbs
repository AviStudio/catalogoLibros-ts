<h4>Objetivos del proyecto</h4>
Los principales objetivos el proyecto son cuatro:
<ul class="my-2">
  <li><p>Aprender el funcionamiento de una base de datos SQL y un ORM</p></li>
  <li><p>Conocer los principios del desarrollo backend</p></li>
  <li><p>Aprender el proceso de despliegue de una pagina</p></li>
  <li><p>Contar con una herramienta con la cual estudiar frameworks de frontend
      como Angular, React o VueJs</p></li>
</ul>
No pretendi entrar en principios UI/UX, por lo que la interfaz puede ser algo
sencilla, pero para el proposito con el que realice este proyecto es suficiente

<hr class="my-2" />

<h4>Tecnologias utilizadas</h4>
Me incline por utilizar Typescript por su tipado estatico, mientras escribia
facilitaba la detección de errores, lo que es de gran ayuda. Respecto a los
modulos y tecnologias principales:
<ul class="my-2">
  <li>
    <p>Docker</p>
  </li>
  <li>
    <p>MySQL (base de datos)</p>
  </li>
  <li>
    <p>Sequelize (ORM)</p>
  </li>
  <li>
    <p>ExpressJS (Framework Web)</p>
  </li>
  <li>
    <p>Handlebars (Motor de plantilla)</p>
  </li>
  <li>
    <p>Passport y JWT (Autenticación)</p>
  </li>
  <li>
    <p>Bootstrap, a traves de un tema de Bootswatch (Diseño sencillo)</p>
  </li>
</ul>

La utilización de Docker es principalmente para mantener aislada la base de
datos, ademas de facilitar su uso, ya he tenido problemas con la ejecución de
las mismas en el entorno linux que utilizo. Por otro lado, utilice un enfoque de
renderizado del lado del servidor (SSR), por ello utilice un Handlebars, aunque
por lo que estuve investigando cuando me decidi por este proyecto, habia otras
alternativas como React y Astro, que también permiten de cierto modo este
enfoque de Server Side Rendering, pero al ser un proyecto sencillo, no le vi
caso a utilizar tecnologias mas grandes.